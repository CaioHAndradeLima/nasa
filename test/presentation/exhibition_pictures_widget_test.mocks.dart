// Mocks generated by Mockito 5.4.4 from annotations
// in nasa_pictures/test/presentation/exhibition_pictures_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nasa_pictures/domain/usecase/filtering/get_pictures_filtering.dart'
    as _i2;
import 'package:nasa_pictures/domain/usecase/filtering/get_pictures_filtering_in.dart'
    as _i5;
import 'package:nasa_pictures/domain/usecase/filtering/get_pictures_filtering_use_case.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetPicturesFiltering_0 extends _i1.SmartFake
    implements _i2.GetPicturesFiltering {
  _FakeGetPicturesFiltering_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPicturesFilteringUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPicturesFilteringUseCase extends _i1.Mock
    implements _i3.GetPicturesFilteringUseCase {
  MockGetPicturesFilteringUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GetPicturesFiltering> call(_i5.GetPicturesFilteringIn? init) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [init],
        ),
        returnValue: _i4.Future<_i2.GetPicturesFiltering>.value(
            _FakeGetPicturesFiltering_0(
          this,
          Invocation.method(
            #call,
            [init],
          ),
        )),
      ) as _i4.Future<_i2.GetPicturesFiltering>);
}

/// A class which mocks [GetPicturesFilteringUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPicturesFilteringUseCaseRelaxed extends _i1.Mock
    implements _i3.GetPicturesFilteringUseCase {
  @override
  _i4.Future<_i2.GetPicturesFiltering> call(_i5.GetPicturesFilteringIn? init) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [init],
        ),
        returnValue: _i4.Future<_i2.GetPicturesFiltering>.value(
            _FakeGetPicturesFiltering_0(
          this,
          Invocation.method(
            #call,
            [init],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.GetPicturesFiltering>.value(
            _FakeGetPicturesFiltering_0(
          this,
          Invocation.method(
            #call,
            [init],
          ),
        )),
      ) as _i4.Future<_i2.GetPicturesFiltering>);
}
